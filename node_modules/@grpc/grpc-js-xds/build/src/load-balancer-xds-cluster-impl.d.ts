import { experimental } from "@grpc/grpc-js";
import { XdsServerConfig } from "./xds-bootstrap";
import LoadBalancingConfig = experimental.LoadBalancingConfig;
export interface DropCategory {
    category: string;
    requests_per_million: number;
}
export declare class XdsClusterImplLoadBalancingConfig implements LoadBalancingConfig {
    private cluster;
    private dropCategories;
    private childPolicy;
    private edsServiceName?;
    private lrsLoadReportingServer?;
    private maxConcurrentRequests;
    getLoadBalancerName(): string;
    toJsonObject(): object;
    constructor(cluster: string, dropCategories: DropCategory[], childPolicy: LoadBalancingConfig[], edsServiceName?: string | undefined, lrsLoadReportingServer?: XdsServerConfig | undefined, maxConcurrentRequests?: number);
    getCluster(): string;
    getEdsServiceName(): string | undefined;
    getLrsLoadReportingServer(): XdsServerConfig | undefined;
    getMaxConcurrentRequests(): number;
    getDropCategories(): DropCategory[];
    getChildPolicy(): experimental.LoadBalancingConfig[];
    static createFromJson(obj: any): XdsClusterImplLoadBalancingConfig;
}
export declare function setup(): void;
