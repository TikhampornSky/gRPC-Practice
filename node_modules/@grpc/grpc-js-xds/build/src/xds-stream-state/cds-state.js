"use strict";
/*
 * Copyright 2021 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CdsState = void 0;
const environment_1 = require("../environment");
const xds_stream_state_1 = require("./xds-stream-state");
class CdsState extends xds_stream_state_1.BaseXdsStreamState {
    isStateOfTheWorld() {
        return true;
    }
    getResourceName(resource) {
        return resource.name;
    }
    getProtocolName() {
        return 'CDS';
    }
    validateNonnegativeDuration(duration) {
        if (!duration) {
            return true;
        }
        /* The maximum values here come from the official Protobuf documentation:
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
         */
        return Number(duration.seconds) >= 0 &&
            Number(duration.seconds) <= 315576000000 &&
            duration.nanos >= 0 &&
            duration.nanos <= 999999999;
    }
    validatePercentage(percentage) {
        if (!percentage) {
            return true;
        }
        return percentage.value >= 0 && percentage.value <= 100;
    }
    validateResponse(message) {
        var _a, _b;
        if (message.type !== 'EDS') {
            return false;
        }
        if (!((_b = (_a = message.eds_cluster_config) === null || _a === void 0 ? void 0 : _a.eds_config) === null || _b === void 0 ? void 0 : _b.ads)) {
            return false;
        }
        if (message.lb_policy !== 'ROUND_ROBIN') {
            return false;
        }
        if (message.lrs_server) {
            if (!message.lrs_server.self) {
                return false;
            }
        }
        if (environment_1.EXPERIMENTAL_OUTLIER_DETECTION) {
            if (message.outlier_detection) {
                if (!this.validateNonnegativeDuration(message.outlier_detection.interval)) {
                    return false;
                }
                if (!this.validateNonnegativeDuration(message.outlier_detection.base_ejection_time)) {
                    return false;
                }
                if (!this.validateNonnegativeDuration(message.outlier_detection.max_ejection_time)) {
                    return false;
                }
                if (!this.validatePercentage(message.outlier_detection.max_ejection_percent)) {
                    return false;
                }
                if (!this.validatePercentage(message.outlier_detection.enforcing_success_rate)) {
                    return false;
                }
                if (!this.validatePercentage(message.outlier_detection.failure_percentage_threshold)) {
                    return false;
                }
                if (!this.validatePercentage(message.outlier_detection.enforcing_failure_percentage)) {
                    return false;
                }
            }
        }
        return true;
    }
}
exports.CdsState = CdsState;
//# sourceMappingURL=cds-state.js.map